name: Release
on:
  push:
    branches:
      - main

jobs:
  macos:
    name: macOS
    runs-on: macos-12
    env:
      CONAN_DEFAULT_PROFILE: ${{ github.workspace }}/config/conan/macos-armv8.profile
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install
        run: scripts/macos/install.sh
      - name: Build
        run: scripts/unix/build.sh
      - name: SCA
        run: scripts/unix/sca.sh
      - name: Quality - Run Unit-Tests
        run: scripts/unix/test_unit.sh
      - name: Quality - Run Integration Tests
        run: scripts/unix/test_integration.sh
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: build-macos
          path: build/Release

  windows:
    name: Windows
    runs-on: windows-2022
    env:
      CONAN_DEFAULT_PROFILE: ${{ github.workspace }}/config/conan/windows-x86_64.profile
    steps:
      - uses: actions/checkout@v3
        with:
            submodules: 'recursive'
      - name: Install
        run: scripts/windows/install.bat
      - name: Build
        run: scripts/windows/build.bat
      - name: Quality - Run Unit-Tests
        run: scripts/windows/test_unit.bat
      - name: Quality - Run Integration Tests
        run: scripts/windows/test_integration.bat
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: build-windows
          path: build/Release

  linux:
    name: Linux
    runs-on: ubuntu-20.04
    env:
      CONAN_DEFAULT_PROFILE: ${{ github.workspace }}/config/conan/linux-x86_64.profile
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install
        run: scripts/linux/install.sh
      - name: Build
        run: scripts/unix/build.sh
      - name: SCA
        run: scripts/unix/sca.sh
      - name: Quality - Run Unit-Tests
        run: scripts/unix/test_unit.sh
      - name: Quality - Run Integration Tests
        run: scripts/unix/test_integration.sh
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: build-linux
          path: build/Release

  release:
    name: Publish Release Draft
    runs-on: ubuntu-latest
    needs: [macos, windows, linux]
    steps:
      - name: Download macOS Artifacts
        uses: actions/download-artifact@v3
        with:
            name: build-macos
            path: build-macos
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v3
        with:
            name: build-windows
            path: build-windows
      - name: Download Linux Artifacts
        uses: actions/download-artifact@v3
        with:
            name: build-linux
            path: build-linux
      - name: Artchive Artifacts
        run: |
          zip -r build-macos{.zip,}
          zip -r build-windows{.zip,}
          zip -r build-linux{.zip,}
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: true
          removeArtifacts: true
          makeLatest: true
          tag: "v0.6.2"
          artifacts: "build-macos.zip,build-windows.zip,build-linux.zip"