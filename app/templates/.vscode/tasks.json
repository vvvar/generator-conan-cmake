{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Environment: Install",
      "detail": "Install project tools and initialize dev env",
      "type": "shell",
      "osx": {
        "command": "git submodule update --init --recursive && scripts/macos/install.sh"
      },
      "windows": {
        "command": "git submodule update --init --recursive && scripts\\windows\\install.bat"
      },
      "linux": {
        "command": "git submodule update --init --recursive && scripts/linux/install.sh"
      }
    },
    {
      "label": "Environment: Cleanup",
      "detail": "Cleanup project tmp and generated files",
      "type": "shell",
      "problemMatcher": [
        "$gcc"
      ],
      "command": "scripts/unix/cleanup.sh",
      "windows": {
        "command": "scripts\\windows\\cleanup.bat"
      },
    },
    {
      "label": "Build",
      "detail": "Build the project and create a Conan package out of it in local cache",
      "type": "shell",
      "problemMatcher": [
        "$gcc"
      ],
      "command": "scripts/unix/build.sh",
      "windows": {
        "command": "scripts\\windows\\build.bat"
      },
    },
    {
      "label": "Quality: SCA",
      "detail": "Run static code analysis",
      "type": "shell",
      "problemMatcher": [
        "$gcc"
      ],
      "command": "scripts/unix/sca.sh",
      "windows": {
        "command": "scripts\\windows\\sca.bat"
      },
    },
    {
      "label": "Quality: Run Unit Test",
      "detail": "Run unit-tests",
      "type": "shell",
      "problemMatcher": [
        "$gcc"
      ],
      "command": "scripts/unix/test_unit.sh",
      "windows": {
        "command": "scripts\\windows\\test_unit.bat"
      },
    },
    {
      "label": "Quality: Run Integration Test",
      "detail": "Run integration tests",
      "type": "shell",
      "problemMatcher": [
        "$gcc"
      ],
      "command": "scripts/unix/test_integration.sh",
      "windows": {
        "command": "scripts\\windows\\test_integration.bat"
      },
    },
  ]
}